datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PaymentStatus {
  UNPAID
  PAID
  REFUNDED
}

model Barber {
  id           Int           @id @default(autoincrement())
  name         String
  appointments Appointment[]
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  price        Int
  duration     Int
  appointments Appointment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String
  message   String
  createdAt DateTime @default(now())
  visible   Boolean  @default(true)

  @@map("comments")
}

model Appointment {
  id                  Int               @id @default(autoincrement())
  customerName        String
  whatsapp            String
  whatsappNormalized  String            @default("")
  barber              Barber            @relation(fields: [barberId], references: [id])
  barberId            Int
  service             Service           @relation(fields: [serviceId], references: [id])
  serviceId           Int
  start               DateTime
  end                 DateTime
  appointmentDate     DateTime          @default(now()) @db.Date
  status              AppointmentStatus @default(SCHEDULED)
  notes               String?
  createdAt           DateTime          @default(now())
  paymentStatus       PaymentStatus     @default(UNPAID)
  paidAt              DateTime?
  priceSnapshot       Int               @default(0)

  @@index([barberId, start, end])
  @@index([serviceId])
  @@index([whatsappNormalized, appointmentDate])
}

/* ðŸ‘‡ ÃšNICA definiciÃ³n de GalleryImage */
model GalleryImage {
  id        Int      @id @default(autoincrement())
  url       String
  alt       String?  @db.VarChar(180)
  visible   Boolean  @default(true)
  order     Int?
  createdAt DateTime @default(now())

  @@map("gallery_images")
}
